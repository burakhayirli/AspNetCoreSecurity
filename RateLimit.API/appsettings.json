{
  "IpRateLimiting": {
    "EnableEndpointRateLimiting": true, //Endpoint seviyesinde oran belirlemek istiyorsak true olmalı

    //Dakikada 60 tane istek, 1 saatte 600 istek yapılacağını farzedelim.
    //Dakidade 100 istek yaparsa fazladan olan 40 istek sayılacak mı sayılmayacak mı?
    //Uygun olanı sayılmamasıdır. Eğer başarısız istekler de sayılsın istiyorsak true olması gerekir.
    "StackBlockedRequests": false,

    //Başarısız olursa hata mesajımız. Too many request.
    "HttpStatusCode": 429,

    //localhost IPV4, Windows 10 IPV6, Belirli bir aralıktaki IP adresleri
    //"IpWhitelist": [ "127.0.0.1", "::1/10", "192.168.0.0/24" ]
    //"IpWhitelist": [ "127.0.0.1", "::1" ],
    "IpWhitelist": [ "127.0.0.1" ],

    //Customer response
    "QuotaExceededResponse": {
      "Content": "{{ \"mesaj\":\"İstek limiti aşıldı.\", \"Detay \":  \"İzin verilen istek sayısı {1}'de {0} istekdir. {2} sonra tekrar deneyiniz. \" }}",
      "ContentType": "application/json"
    },


    //Load Balancer kullanılıyorsa bu şekilde ayar yaparız
    //"RealIpHeader": "x-real-ip",
    //"RealIpHeader": "x-ip",

    //Tüm controllerlar ve action için genel
    //"GeneralRules": [
    //  {
    //    "Endpoint": "*",
    //    "Period": "5s",
    //    "Limit": 2
    //  }
    //

    //* dediğimiz Limit POST,GET için ayrı ayrı setlenmiş olur.

    "GeneralRules": [
      //ProductController'a özel 20snde 5 istek
      {
        "Endpoint": "*:/api/product",
        "Period": "20s",
        "Limit": 5
      },
      //ProductController'a özel 1 saatte 100 istek
      {
        "Endpoint": "*:/api/product",
        "Period": "1h",
        "Limit": 100
      },
      //endpointte parametre varsa sonunda * ifadesi kullanıyoruz.
      {
        "Endpoint": "*:/api/product/*",
        "Period": "30s",
        "Limit": 5
      },
      //CategoryController'a özel 1 günde 500 istek
      {
        "Endpoint": "*:/api/category",
        "Period": "1d",
        "Limit": 500
      }
    ]
  },
  //IP bazlı kurallar. Burada belirlediğimiz kurallar genel kurallarımızı (GeneralRules) ezer.
  //Buradaki keylerin uygulama ayağa kalktığında yüklenmesi için program.cs'de setlememiz gerekiyor.
  //Burada belirlenen kurallar eğer Genel kurallardan daha dar ise en dar olanı baz alınır.
  //"IpRateLimitPolicies": {
  //  "IpRules": [
  //    {
  //      "Ip": "::1",
  //      "Rules": [
  //        {
  //          "Endpoint": "*",
  //          "Period": "30s",
  //          "Limit": 30
  //        }
  //      ]
  //    }
  //  ]
  //},

  //Herhangi bir rate limit uygulanmasını istemediğimiz endpointleri ayarlama
  "EndpointWhiteList": [ "put:/api/product" ],

  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}
